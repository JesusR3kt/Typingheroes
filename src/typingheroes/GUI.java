/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package typingheroes;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;

/**
 *
 * @author jesusr3kt
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    private int length;
    private int delay;
    private String bs;
    private int combo = 1;
    private int streak, p, fehler;
    private Clip clip;
    private boolean v;
    private int speed = 1000;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Start = new javax.swing.JButton();
        lbTipp = new javax.swing.JLabel();
        tfIn = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lbBonus = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbPunkte = new javax.swing.JLabel();
        btSpeed = new javax.swing.JButton();
        lbLeben = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Start.setText("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        lbTipp.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 48)); // NOI18N
        lbTipp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTipp.setText("Txt");

        tfIn.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 48)); // NOI18N
        tfIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 24)); // NOI18N
        jLabel3.setText("Multiplier:");

        lbBonus.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 24)); // NOI18N
        lbBonus.setText("x1");

        jLabel2.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 24)); // NOI18N
        jLabel2.setText("Punkte:");

        lbPunkte.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 24)); // NOI18N

        btSpeed.setText("Change Speed");
        btSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSpeedActionPerformed(evt);
            }
        });

        lbLeben.setFont(new java.awt.Font("Oxygen-Sans Sans-Book", 0, 24)); // NOI18N
        lbLeben.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbLeben.setText("♥♥♥♥♥♥♥♥♥♥");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbPunkte, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 563, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSpeed))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(lbTipp, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(tfIn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbLeben)
                .addGap(283, 283, 283))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSpeed)
                .addGap(166, 166, 166)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbTipp, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(tfIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbLeben, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addComponent(Start))
                    .addComponent(lbPunkte, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        lbPunkte.setText("");
        p=0;
        combo=1;
        Start.setEnabled(false);
        btSpeed.setEnabled(false);
        lbLeben.setText("♥♥♥♥♥♥♥♥♥♥");
        delay = 200;
        lbLeben.setForeground(Color.red);
        tfIn.setBackground(Color.white);
        tfIn.setText("");
        bout.start();
        read.start();
        music.start();
        //RGB.start();

    }//GEN-LAST:event_StartActionPerformed

    private void btSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSpeedActionPerformed
        String sp = JOptionPane.showInputDialog(rootPane, "Geschwindigkeit=" + speed + "\nNeuer Wert: ");
        speed = Integer.parseInt(sp);
    }//GEN-LAST:event_btSpeedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Start;
    private javax.swing.JButton btSpeed;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbBonus;
    private javax.swing.JLabel lbLeben;
    private javax.swing.JLabel lbPunkte;
    private javax.swing.JLabel lbTipp;
    private javax.swing.JTextField tfIn;
    // End of variables declaration//GEN-END:variables

    Thread bout = new Thread() {
        public void run() {
            boolean b = true;

            while (b) {
                Random rand = new Random();
                int x = rand.nextInt((122 - 97) + 1) + 97;

                char c = (char) x;

                bs = ("" + c);
                lbTipp.setText(bs);

                try {
                    Thread.sleep(speed);
                } catch (InterruptedException ex) {
                   
                }
            }
        }

    };

    Thread read = new Thread() {
        public void run() {
            boolean b = true;

            while (b) {

                try {
                    Thread.sleep(50);
                } catch (InterruptedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                String s = tfIn.getText();

                if (s.isEmpty()) {

                    continue;

                }
                if (s.equals(bs)) {
                    v = true;
                    tfIn.setBackground(Color.green);
                    streak += 1;
                    if (streak == 4) {
                        combo += 1;
                        streak = 0;
                    }
                    p += 100 * combo;
                } else {
                    fehler++;
                    tfIn.setBackground(Color.red);
                    streak = 0;
                    combo = 1;
                    v = false;
                    String str = lbLeben.getText();
                    str = str.substring(0, str.length() - 1);
                    lbLeben.setText(str);
                    if (fehler == 10) {
                        bout.stop();
                        music.interrupt();
                        RGB.interrupt();
                        btSpeed.setEnabled(true);
                        Start.setEnabled(true);
                        JOptionPane.showMessageDialog(rootPane, "DO YOU UNDERSTAND!\nR.I.P.\nDu hast VERLOREN!");
                        read.interrupt();

                    }
                }
                try {
                    Thread.sleep(400);
                } catch (InterruptedException ex) {
                    
                }

                lbBonus.setText("x" + combo);
                lbPunkte.setText("" + p);
                try {
                    Thread.sleep(delay / 3);
                } catch (InterruptedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                tfIn.setBackground(Color.white);
                tfIn.setText("");
            }

        }
    };

    Thread music = new Thread() {
        public void run() {

            try {
                File soundFile;
                soundFile = new File("src/typingheroes/dogg.wav");
                AudioInputStream stream;
                AudioFormat format;
                DataLine.Info info;

                stream = AudioSystem.getAudioInputStream(soundFile);
                format = stream.getFormat();
                info = new DataLine.Info(Clip.class, format);
                clip = (Clip) AudioSystem.getLine(info);
                clip.open(stream);
                clip.start();
                length = (int) stream.getFrameLength();
                System.out.println(length);

                FloatControl volume = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
                boolean b;
                int y = 0;
                while (y < length) {

                    Thread.sleep(10);

                    y += 1000;

                    if (v == false) {
                        volume.setValue(-1000);
                    } else {
                        volume.setValue(0);
                    }
                }

            } catch (Exception e) {
                //whatevers
            }

        }

    };

    Thread RGB = new Thread() {

        public void run() {
            while (true) {
                lbLeben.setForeground(Color.green);
                lbTipp.setForeground(Color.red);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                lbLeben.setForeground(Color.blue);
                lbTipp.setForeground(Color.green);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                lbLeben.setForeground(Color.red);

                lbTipp.setForeground(Color.blue);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    };

}
